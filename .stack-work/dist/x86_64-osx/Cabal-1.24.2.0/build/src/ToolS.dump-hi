
==================== FINAL INTERFACE ====================
2017-07-17 13:16:26.549911 UTC

interface SAT-Pol-0.1.0.0-CfnMeGgalar5P7rViiH2gc:ToolS 8002
  interface hash: 20b7c56296a12d97e8e6fe8e866bad83
  ABI hash: f511e9e242536be025c7de93722553b7
  export-list hash: ed4106494c9ef46613aa6035a62146e5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f6624f22fcdd76ed0ac6625466e2d712
  sig of: Nothing
  used TH splices: False
  where
exports:
  ToolS.toolS
module dependencies: Examples PolAux
package dependencies: HaskellForMaths-0.4.8@HaskellForMaths-0.4.8-8QcC8dcD7HF183G9RK8zU9
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.10.2@containers-0.5.10.2-BsNvjXoQS1iGZ9xbXaQ0Mz
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: HaskellForMaths-0.4.8@HaskellForMaths-0.4.8-8QcC8dcD7HF183G9RK8zU9:Math.Algebras.Structures
         HaskellForMaths-0.4.8@HaskellForMaths-0.4.8-8QcC8dcD7HF183G9RK8zU9:Math.CommutativeAlgebra.Polynomial
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.10.2@containers-0.5.10.2-BsNvjXoQS1iGZ9xbXaQ0Mz:Data.Set.Internal
import  -/  HaskellForMaths-0.4.8@HaskellForMaths-0.4.8-8QcC8dcD7HF183G9RK8zU9:Math.Algebras.Structures cbf553a388e500de36f995a8d89172a4
import  -/  HaskellForMaths-0.4.8@HaskellForMaths-0.4.8-8QcC8dcD7HF183G9RK8zU9:Math.Algebras.TensorProduct c053039aae50bcc7df2c155eefb8e506
import  -/  HaskellForMaths-0.4.8@HaskellForMaths-0.4.8-8QcC8dcD7HF183G9RK8zU9:Math.Algebras.VectorSpace 6cba24ab7ee9b5f302ba65e0ee801d61
import  -/  HaskellForMaths-0.4.8@HaskellForMaths-0.4.8-8QcC8dcD7HF183G9RK8zU9:Math.CommutativeAlgebra.Polynomial b54042f0d44ec74552e332a486c1ec0b
import  -/  HaskellForMaths-0.4.8@HaskellForMaths-0.4.8-8QcC8dcD7HF183G9RK8zU9:Math.Core.Field 75661b1cf3e7c0e1ab0f62f78c950ef8
import  -/  HaskellForMaths-0.4.8@HaskellForMaths-0.4.8-8QcC8dcD7HF183G9RK8zU9:Math.Core.Utils 5681b0689a2f6e26ea9c0077f1ee1777
import  -/  Examples 8e6fa4fda5f1a3d1426f9fa2d68ccc1b
  exports: 5ed8308408ee2fa4beebee050baaa142
import  -/  PolAux f76a52e75a7d1ed0135ccf56a5f79c80
  exports: b57020b84300bf532d83dddc777afd3c
  clean af1351ab5cca59308ff0417aba8b9c88
  deriv 25eb60d00e0997ae19d0ed4fdb5e7209
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  containers-0.5.10.2@containers-0.5.10.2-BsNvjXoQS1iGZ9xbXaQ0Mz:Data.Set 0a21f3925a0d3a5e69c1f4a8e792bc80
import  -/  containers-0.5.10.2@containers-0.5.10.2-BsNvjXoQS1iGZ9xbXaQ0Mz:Data.Set.Internal 0eaafc03eaf1eada07e1d85783ded885
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
526810aaa6829e6139596957aca0fcb7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module ToolS.$trModule2 ToolS.$trModule1) -}
74be11c308c4264078effec87db21fd6
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ToolS"#) -}
0030e8aaa82d92973b644d55d36e741c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "SAT-Pol-0.1.0.0-CfnMeGgalar5P7rViiH2gc"#) -}
991aa9f10b6146dc86a4b73f5b428877
  $wtoolAux ::
    (GHC.Classes.Ord k, GHC.Classes.Eq u,
     Math.CommutativeAlgebra.Polynomial.MonomialConstructor m,
     Math.Algebras.Structures.Algebra k (m u), GHC.Classes.Ord (m u),
     GHC.Num.Num k) =>
    Data.Set.Internal.Set (Math.Algebras.VectorSpace.Vect k (m u))
    -> Data.Set.Internal.Set (Math.Algebras.VectorSpace.Vect k (m u))
    -> GHC.Types.Bool
  {- Arity: 8,
     Strictness: <L,U(U(U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)><L,U(C(C1(U)),C(C1(U)))><L,U(C(U),C(U))><S(C(S)L),U(C(U),C(U))><L,U(U(U,U),C(C1(U)),A,A,A,A,A,A)><L,U(C(C1(U)),A,C(C1(U)),C(U),A,A,C(U))><S,1*U><S,U>,
     Inline: [0] -}
cf44656edd405ef6ce1aef473f7b616d
  $wtoolS ::
    (GHC.Classes.Eq u,
     Math.CommutativeAlgebra.Polynomial.MonomialConstructor m,
     Math.Algebras.Structures.Algebra k (m u), GHC.Classes.Ord (m u),
     GHC.Classes.Ord k, GHC.Num.Num k) =>
    Data.Set.Internal.Set (Math.Algebras.VectorSpace.Vect k (m u))
    -> GHC.Types.Bool
  {- Arity: 7,
     Strictness: <L,U(C(C1(U)),C(C1(U)))><L,U(C(U),C(U))><S(C(S)L),U(C(U),C(U))><L,U(U(U,U),C(C1(U)),A,A,A,A,A,A)><L,U(U(U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)><L,U(C(C1(U)),A,C(C1(U)),C(U),A,A,C(U))><S,U>,
     Inline: [0],
     Unfolding: (\ @ u
                   @ (m :: * -> *)
                   @ k
                   (w :: GHC.Classes.Eq u)
                   (w1 :: Math.CommutativeAlgebra.Polynomial.MonomialConstructor m)
                   (w2 :: Math.Algebras.Structures.Algebra k (m u))
                   (w3 :: GHC.Classes.Ord (m u))
                   (w4 :: GHC.Classes.Ord k)
                   (w5 :: GHC.Num.Num k)
                   (w6 :: Data.Set.Internal.Set
                            (Math.Algebras.VectorSpace.Vect k (m u))) ->
                 let {
                   lvl2 :: Math.Algebras.VectorSpace.Vect k (m u)
                           -> [Math.Algebras.VectorSpace.Vect k (m u)]
                   = Math.CommutativeAlgebra.Polynomial.vars @ k @ m @ u w5 w4 w1 w3
                 } in
                 let {
                   $dOrd :: GHC.Classes.Ord (Math.Algebras.VectorSpace.Vect k (m u))
                   = Math.Algebras.VectorSpace.$fOrdVect @ k @ (m u) w4 w3
                 } in
                 letrec {
                   go5 :: Data.Set.Internal.Set
                            (Math.Algebras.VectorSpace.Vect k (m u))
                          -> Data.Set.Internal.Set (Math.Algebras.VectorSpace.Vect k (m u))
                          -> Data.Set.Internal.Set (Math.Algebras.VectorSpace.Vect k (m u))
                     {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
                   = \ (z' :: Data.Set.Internal.Set
                                (Math.Algebras.VectorSpace.Vect k (m u)))
                       (ds :: Data.Set.Internal.Set
                                (Math.Algebras.VectorSpace.Vect k (m u))) ->
                     case ds of wild {
                       Data.Set.Internal.Bin dt x l r
                       -> case lvl2 x of wild1 {
                            []
                            -> go5
                                 (Data.Set.Internal.union
                                    @ (Math.Algebras.VectorSpace.Vect k (m u))
                                    $dOrd
                                    (go5 z' r)
                                    (Data.Set.Internal.Tip
                                       @ (Math.Algebras.VectorSpace.Vect k (m u))))
                                 l
                            : x0 xs0
                            -> case x0
                                      `cast`
                                    (Math.Algebras.VectorSpace.N:Vect[0]
                                         <k>_R <m u>_R) of nt { DEFAULT ->
                               go5
                                 (Data.Set.Internal.union
                                    @ (Math.Algebras.VectorSpace.Vect k (m u))
                                    $dOrd
                                    (go5 z' r)
                                    (Data.Set.Internal.$wpoly_go
                                       @ (Math.Algebras.VectorSpace.Vect k (m u))
                                       1#
                                       (Data.Set.Internal.Bin
                                          @ (Math.Algebras.VectorSpace.Vect k (m u))
                                          1#
                                          nt
                                            `cast`
                                          (Sym (Math.Algebras.VectorSpace.N:Vect[0] <k>_R <m u>_R))
                                          (Data.Set.Internal.Tip
                                             @ (Math.Algebras.VectorSpace.Vect k (m u)))
                                          (Data.Set.Internal.Tip
                                             @ (Math.Algebras.VectorSpace.Vect k (m u))))
                                       xs0))
                                 l } }
                       Data.Set.Internal.Tip -> z' }
                 } in
                 ToolS.$wtoolAux
                   @ k
                   @ u
                   @ m
                   w4
                   w
                   w1
                   w2
                   w3
                   w5
                   (go5
                      (Data.Set.Internal.Tip @ (Math.Algebras.VectorSpace.Vect k (m u)))
                      w6)
                   w6) -}
f0786fd9630bfa049ee8c0beebe31ecd
  toolS ::
    (GHC.Classes.Eq u, GHC.Show.Show (m u), GHC.Show.Show u,
     Math.CommutativeAlgebra.Polynomial.MonomialConstructor m,
     Math.Algebras.Structures.Algebra k (m u), GHC.Classes.Ord (m u),
     GHC.Classes.Ord k, GHC.Num.Num k) =>
    Data.Set.Internal.Set (Math.Algebras.VectorSpace.Vect k (m u))
    -> GHC.Types.Bool
  {- Arity: 9,
     Strictness: <L,U(C(C1(U)),C(C1(U)))><L,A><L,A><L,U(C(U),C(U))><S(C(S)L),U(C(U),C(U))><L,U(U(U,U),C(C1(U)),A,A,A,A,A,A)><L,U(U(U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)><L,U(C(C1(U)),A,C(C1(U)),C(U),A,A,C(U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (9, True, True)
                (\ @ u
                   @ (m :: * -> *)
                   @ k
                   (w :: GHC.Classes.Eq u)
                   (w1 :: GHC.Show.Show (m u))
                   (w2 :: GHC.Show.Show u)
                   (w3 :: Math.CommutativeAlgebra.Polynomial.MonomialConstructor m)
                   (w4 :: Math.Algebras.Structures.Algebra k (m u))
                   (w5 :: GHC.Classes.Ord (m u))
                   (w6 :: GHC.Classes.Ord k)
                   (w7 :: GHC.Num.Num k)
                   (w8 :: Data.Set.Internal.Set
                            (Math.Algebras.VectorSpace.Vect k (m u))) ->
                 ToolS.$wtoolS @ u @ m @ k w w3 w4 w5 w6 w7 w8) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

